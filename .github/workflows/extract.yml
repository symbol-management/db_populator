name: extract

on:
  push:
    branches: 
      - "*"
  schedule:
    - cron:  '30 * * * *'
  
  
  
jobs:
  extract:
    name: extract
    runs-on: "ubuntu-latest"
    steps:
      - name: skip me
        shell: bash -l {0}
        if: success() && contains(github.event.head_commit.message, 'ci skip')
        run: |
          echo "commit message: '${MSG}'"
          echo "CI_SKIP=true" >> $GITHUB_ENV
        env:
          MSG: ${{ github.event.head_commit.message }}

      - uses: actions/checkout@v2
        if: success() && ! env.CI_SKIP

      - uses: conda-incubator/setup-miniconda@v2
        if: success() && ! env.CI_SKIP
        with:
          python-version: 3.9
          channels: conda-forge,defaults
          channel-priority: strict
          show-channel-urls: true

      - name: install
        shell: bash -l {0}
        if: success() && ! env.CI_SKIP
        run: |
          conda install pip -y
          # We need things from libcflib
          git clone --depth=1 https:///github.com/regro/libcflib
          pushd libcflib
          pip install --no-deps .
          conda install --file requirements/run.txt -y
          popd
          rm -rf libcflib
          # Install the exporter
          git clone --depth=1 https:///github.com/symbol-management/symbol-exporter
          pushd symbol-exporter
          pip install --no-deps .
          conda install --file requirements/run.txt -y
          popd
          # Use our dask config so dask kills things before the runner
          mkdir ~/.config/dask
          cp distributed.yaml ~/.config/dask

      - name: extract_symbols
        env:
          STORAGE_SECRET_TOKEN: ${{ secrets.STORAGE_SECRET_TOKEN }}          
        shell: bash -l {0}
        if: success() && ! env.CI_SKIP
        run: |
          python -m symbol_exporter.ast_db_populator symbols
      
#      - name: index
#        shell: bash -l {0}
#        if: success() && ! env.CI_SKIP
#        run: |
#          python -m symbol_exporter.ast_index

